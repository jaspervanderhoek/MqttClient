// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mqttclient.proxies;

/**
 * Stores the configuration related to topics to be published or subscribed.
 */
public class MqttConfig
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject mqttConfigMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MqttClient.MqttConfig";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ConfigurationName("ConfigurationName"),
		PubOrSub("PubOrSub"),
		SubOrUnSub("SubOrUnSub"),
		TopicName("TopicName"),
		Qos("Qos"),
		MqttConfig_Subscription("MqttClient.MqttConfig_Subscription"),
		MqttConfig_BrokerConfig("MqttClient.MqttConfig_BrokerConfig");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MqttConfig(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MqttClient.MqttConfig"));
	}

	protected MqttConfig(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mqttConfigMendixObject)
	{
		if (mqttConfigMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MqttClient.MqttConfig", mqttConfigMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MqttClient.MqttConfig");

		this.mqttConfigMendixObject = mqttConfigMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'MqttConfig.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static mqttclient.proxies.MqttConfig initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mqttclient.proxies.MqttConfig.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mqttclient.proxies.MqttConfig initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mqttclient.proxies.MqttConfig(context, mendixObject);
	}

	public static mqttclient.proxies.MqttConfig load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mqttclient.proxies.MqttConfig.initialize(context, mendixObject);
	}

	public static java.util.List<mqttclient.proxies.MqttConfig> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mqttclient.proxies.MqttConfig> result = new java.util.ArrayList<mqttclient.proxies.MqttConfig>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MqttClient.MqttConfig" + xpathConstraint))
			result.add(mqttclient.proxies.MqttConfig.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ConfigurationName
	 */
	public final java.lang.String getConfigurationName()
	{
		return getConfigurationName(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigurationName
	 */
	public final java.lang.String getConfigurationName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConfigurationName.toString());
	}

	/**
	 * Set value of ConfigurationName
	 * @param configurationname
	 */
	public final void setConfigurationName(java.lang.String configurationname)
	{
		setConfigurationName(getContext(), configurationname);
	}

	/**
	 * Set value of ConfigurationName
	 * @param context
	 * @param configurationname
	 */
	public final void setConfigurationName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String configurationname)
	{
		getMendixObject().setValue(context, MemberNames.ConfigurationName.toString(), configurationname);
	}

	/**
	 * Set value of PubOrSub
	 * @param puborsub
	 */
	public final mqttclient.proxies.Enum_PubOrSub getPubOrSub()
	{
		return getPubOrSub(getContext());
	}

	/**
	 * @param context
	 * @return value of PubOrSub
	 */
	public final mqttclient.proxies.Enum_PubOrSub getPubOrSub(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PubOrSub.toString());
		if (obj == null)
			return null;

		return mqttclient.proxies.Enum_PubOrSub.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of PubOrSub
	 * @param puborsub
	 */
	public final void setPubOrSub(mqttclient.proxies.Enum_PubOrSub puborsub)
	{
		setPubOrSub(getContext(), puborsub);
	}

	/**
	 * Set value of PubOrSub
	 * @param context
	 * @param puborsub
	 */
	public final void setPubOrSub(com.mendix.systemwideinterfaces.core.IContext context, mqttclient.proxies.Enum_PubOrSub puborsub)
	{
		if (puborsub != null)
			getMendixObject().setValue(context, MemberNames.PubOrSub.toString(), puborsub.toString());
		else
			getMendixObject().setValue(context, MemberNames.PubOrSub.toString(), null);
	}

	/**
	 * @return value of SubOrUnSub
	 */
	public final java.lang.Boolean getSubOrUnSub()
	{
		return getSubOrUnSub(getContext());
	}

	/**
	 * @param context
	 * @return value of SubOrUnSub
	 */
	public final java.lang.Boolean getSubOrUnSub(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SubOrUnSub.toString());
	}

	/**
	 * Set value of SubOrUnSub
	 * @param suborunsub
	 */
	public final void setSubOrUnSub(java.lang.Boolean suborunsub)
	{
		setSubOrUnSub(getContext(), suborunsub);
	}

	/**
	 * Set value of SubOrUnSub
	 * @param context
	 * @param suborunsub
	 */
	public final void setSubOrUnSub(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean suborunsub)
	{
		getMendixObject().setValue(context, MemberNames.SubOrUnSub.toString(), suborunsub);
	}

	/**
	 * @return value of TopicName
	 */
	public final java.lang.String getTopicName()
	{
		return getTopicName(getContext());
	}

	/**
	 * @param context
	 * @return value of TopicName
	 */
	public final java.lang.String getTopicName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TopicName.toString());
	}

	/**
	 * Set value of TopicName
	 * @param topicname
	 */
	public final void setTopicName(java.lang.String topicname)
	{
		setTopicName(getContext(), topicname);
	}

	/**
	 * Set value of TopicName
	 * @param context
	 * @param topicname
	 */
	public final void setTopicName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String topicname)
	{
		getMendixObject().setValue(context, MemberNames.TopicName.toString(), topicname);
	}

	/**
	 * Set value of Qos
	 * @param qos
	 */
	public final mqttclient.proxies.qos getQos()
	{
		return getQos(getContext());
	}

	/**
	 * @param context
	 * @return value of Qos
	 */
	public final mqttclient.proxies.qos getQos(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Qos.toString());
		if (obj == null)
			return null;

		return mqttclient.proxies.qos.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Qos
	 * @param qos
	 */
	public final void setQos(mqttclient.proxies.qos qos)
	{
		setQos(getContext(), qos);
	}

	/**
	 * Set value of Qos
	 * @param context
	 * @param qos
	 */
	public final void setQos(com.mendix.systemwideinterfaces.core.IContext context, mqttclient.proxies.qos qos)
	{
		if (qos != null)
			getMendixObject().setValue(context, MemberNames.Qos.toString(), qos.toString());
		else
			getMendixObject().setValue(context, MemberNames.Qos.toString(), null);
	}

	/**
	 * @return value of MqttConfig_Subscription
	 */
	public final mqttclient.proxies.Subscription getMqttConfig_Subscription() throws com.mendix.core.CoreException
	{
		return getMqttConfig_Subscription(getContext());
	}

	/**
	 * @param context
	 * @return value of MqttConfig_Subscription
	 */
	public final mqttclient.proxies.Subscription getMqttConfig_Subscription(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mqttclient.proxies.Subscription result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MqttConfig_Subscription.toString());
		if (identifier != null)
			result = mqttclient.proxies.Subscription.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MqttConfig_Subscription
	 * @param mqttconfig_subscription
	 */
	public final void setMqttConfig_Subscription(mqttclient.proxies.Subscription mqttconfig_subscription)
	{
		setMqttConfig_Subscription(getContext(), mqttconfig_subscription);
	}

	/**
	 * Set value of MqttConfig_Subscription
	 * @param context
	 * @param mqttconfig_subscription
	 */
	public final void setMqttConfig_Subscription(com.mendix.systemwideinterfaces.core.IContext context, mqttclient.proxies.Subscription mqttconfig_subscription)
	{
		if (mqttconfig_subscription == null)
			getMendixObject().setValue(context, MemberNames.MqttConfig_Subscription.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MqttConfig_Subscription.toString(), mqttconfig_subscription.getMendixObject().getId());
	}

	/**
	 * @return value of MqttConfig_BrokerConfig
	 */
	public final mqttclient.proxies.BrokerConfig getMqttConfig_BrokerConfig() throws com.mendix.core.CoreException
	{
		return getMqttConfig_BrokerConfig(getContext());
	}

	/**
	 * @param context
	 * @return value of MqttConfig_BrokerConfig
	 */
	public final mqttclient.proxies.BrokerConfig getMqttConfig_BrokerConfig(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mqttclient.proxies.BrokerConfig result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MqttConfig_BrokerConfig.toString());
		if (identifier != null)
			result = mqttclient.proxies.BrokerConfig.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MqttConfig_BrokerConfig
	 * @param mqttconfig_brokerconfig
	 */
	public final void setMqttConfig_BrokerConfig(mqttclient.proxies.BrokerConfig mqttconfig_brokerconfig)
	{
		setMqttConfig_BrokerConfig(getContext(), mqttconfig_brokerconfig);
	}

	/**
	 * Set value of MqttConfig_BrokerConfig
	 * @param context
	 * @param mqttconfig_brokerconfig
	 */
	public final void setMqttConfig_BrokerConfig(com.mendix.systemwideinterfaces.core.IContext context, mqttclient.proxies.BrokerConfig mqttconfig_brokerconfig)
	{
		if (mqttconfig_brokerconfig == null)
			getMendixObject().setValue(context, MemberNames.MqttConfig_BrokerConfig.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MqttConfig_BrokerConfig.toString(), mqttconfig_brokerconfig.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return mqttConfigMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mqttclient.proxies.MqttConfig that = (mqttclient.proxies.MqttConfig) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MqttClient.MqttConfig";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
