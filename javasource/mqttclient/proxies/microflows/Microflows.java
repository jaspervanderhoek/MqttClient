// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mqttclient.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MqttClient module
	public static boolean aCT_BrokerConfig_Commit(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.ACT_BrokerConfig_Commit").withParams(params).execute(context);
	}
	public static void aCT_BrokerConfig_Save(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		Core.microflowCall("MqttClient.ACT_BrokerConfig_Save").withParams(params).execute(context);
	}
	public static boolean aCT_CreateBrokerConnection(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig, mqttclient.proxies.Validation _validation)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		params.put("Validation", _validation == null ? null : _validation.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.ACT_CreateBrokerConnection").withParams(params).execute(context);
	}
	public static boolean aCT_MqttConfig_Commit(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.ACT_MqttConfig_Commit").withParams(params).execute(context);
	}
	public static void aCT_MqttConfig_Save(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		Core.microflowCall("MqttClient.ACT_MqttConfig_Save").withParams(params).execute(context);
	}
	public static void aCT_ProcessPayloadMessage(IContext context, java.lang.String _payload, java.lang.String _topic, java.lang.String _host, java.lang.Long _port)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Payload", _payload);
		params.put("Topic", _topic);
		params.put("Host", _host);
		params.put("Port", _port);
		Core.microflowCall("MqttClient.ACT_ProcessPayloadMessage").withParams(params).execute(context);
	}
	public static void aCT_PublishPayload(IContext context, mqttclient.proxies.PublishTester _publishTester)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PublishTester", _publishTester == null ? null : _publishTester.getMendixObject());
		Core.microflowCall("MqttClient.ACT_PublishPayload").withParams(params).execute(context);
	}
	public static void aDe_BrokerConfig_Delete(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		Core.microflowCall("MqttClient.ADe_BrokerConfig_Delete").withParams(params).execute(context);
	}
	public static void aDe_MqttConfig(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		Core.microflowCall("MqttClient.ADe_MqttConfig").withParams(params).execute(context);
	}
	public static boolean bCo_BrokerConfig(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.BCo_BrokerConfig").withParams(params).execute(context);
	}
	public static boolean bCo_MqttConfig(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.BCo_MqttConfig").withParams(params).execute(context);
	}
	public static void iVK_LaunchPublishPayload(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		Core.microflowCall("MqttClient.IVK_LaunchPublishPayload").withParams(params).execute(context);
	}
	public static boolean oSu_MqttStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("MqttClient.OSu_MqttStartup").withParams(params).execute(context);
	}
	public static mqttclient.proxies.Validation sUB_BrokerValidationObject(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("MqttClient.SUB_BrokerValidationObject").withParams(params).execute(context);
		return result == null ? null : mqttclient.proxies.Validation.initialize(context, result);
	}
	public static mqttclient.proxies.Validation sUB_MqttValidationObject(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("MqttClient.SUB_MqttValidationObject").withParams(params).execute(context);
		return result == null ? null : mqttclient.proxies.Validation.initialize(context, result);
	}
	public static boolean sUB_SubscribeOrUnsubscribe(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.SUB_SubscribeOrUnsubscribe").withParams(params).execute(context);
	}
	public static boolean val_BrokerAlreadyUsed(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.Val_BrokerAlreadyUsed").withParams(params).execute(context);
	}
	public static boolean val_BrokerConfigExists(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig, mqttclient.proxies.Validation _validation)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		params.put("Validation", _validation == null ? null : _validation.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.Val_BrokerConfigExists").withParams(params).execute(context);
	}
	public static boolean val_BrokerConfigVariables(IContext context, mqttclient.proxies.BrokerConfig _brokerConfig, mqttclient.proxies.Validation _validation)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BrokerConfig", _brokerConfig == null ? null : _brokerConfig.getMendixObject());
		params.put("Validation", _validation == null ? null : _validation.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.Val_BrokerConfigVariables").withParams(params).execute(context);
	}
	public static boolean val_MqttConfigExists(IContext context, mqttclient.proxies.MqttConfig _mqttConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.Val_MqttConfigExists").withParams(params).execute(context);
	}
	public static boolean val_MqttConfigVariables(IContext context, mqttclient.proxies.MqttConfig _mqttConfig, mqttclient.proxies.Validation _validation)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MqttConfig", _mqttConfig == null ? null : _mqttConfig.getMendixObject());
		params.put("Validation", _validation == null ? null : _validation.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("MqttClient.Val_MqttConfigVariables").withParams(params).execute(context);
	}
}